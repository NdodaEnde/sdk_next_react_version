"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/utils/apiUtils.js":
/*!*******************************!*\
  !*** ./src/utils/apiUtils.js ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiDelete: function() { return /* binding */ apiDelete; },\n/* harmony export */   apiGet: function() { return /* binding */ apiGet; },\n/* harmony export */   apiPost: function() { return /* binding */ apiPost; },\n/* harmony export */   apiPut: function() { return /* binding */ apiPut; },\n/* harmony export */   getApiHeaders: function() { return /* binding */ getApiHeaders; },\n/* harmony export */   handleApiResponse: function() { return /* binding */ handleApiResponse; },\n/* harmony export */   handleAuthError: function() { return /* binding */ handleAuthError; },\n/* harmony export */   isAuthError: function() { return /* binding */ isAuthError; }\n/* harmony export */ });\n/**\n * API utilities for making authenticated requests to the backend\n */ // Base API URL from environment\nconst API_URL = \"http://localhost:8004\" || 0;\n/**\n * Get common headers for API requests including authorization if available\n */ const getApiHeaders = ()=>{\n    const headers = {\n        \"Content-Type\": \"application/json\"\n    };\n    // Add authorization token if available\n    const token = localStorage.getItem(\"supabase.auth.token\");\n    if (token) {\n        headers[\"Authorization\"] = \"Bearer \".concat(token);\n    } else if (true) {\n        // In development, if no token is available, add a default one\n        headers[\"Authorization\"] = \"Bearer dev-token\";\n    }\n    // Add organization context header if available\n    const orgId = localStorage.getItem(\"currentOrganizationId\");\n    if (orgId) {\n        headers[\"X-Organization-ID\"] = orgId;\n    }\n    return headers;\n};\n/**\n * Handle API response and extract data or error\n */ const handleApiResponse = async (response)=>{\n    // First check if the response is ok (status in the range 200-299)\n    if (!response.ok) {\n        let errorMessage;\n        try {\n            // Try to parse error as JSON\n            const errorData = await response.json();\n            errorMessage = errorData.error || errorData.message || \"API Error: \".concat(response.status, \" \").concat(response.statusText);\n        } catch (e) {\n            // If parsing fails, use status text\n            errorMessage = \"API Error: \".concat(response.status, \" \").concat(response.statusText);\n        }\n        // Throw error to be caught by the caller\n        throw new Error(errorMessage);\n    }\n    // For empty responses (like 204 No Content)\n    if (response.status === 204) {\n        return {\n            success: true\n        };\n    }\n    // For successful responses with content, parse JSON\n    return await response.json();\n};\n/**\n * Make a GET request to the API\n */ const apiGet = async function(endpoint) {\n    let customHeaders = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    const url = endpoint.startsWith(\"http\") ? endpoint : \"\".concat(API_URL).concat(endpoint);\n    try {\n        const response = await fetch(url, {\n            method: \"GET\",\n            headers: {\n                ...getApiHeaders(),\n                ...customHeaders\n            }\n        });\n        return await handleApiResponse(response);\n    } catch (error) {\n        console.error(\"API GET Error (\".concat(endpoint, \"):\"), error);\n        throw error;\n    }\n};\n/**\n * Make a POST request to the API\n */ const apiPost = async function(endpoint) {\n    let data = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, customHeaders = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n    const url = endpoint.startsWith(\"http\") ? endpoint : \"\".concat(API_URL).concat(endpoint);\n    try {\n        const response = await fetch(url, {\n            method: \"POST\",\n            headers: {\n                ...getApiHeaders(),\n                ...customHeaders\n            },\n            body: data ? JSON.stringify(data) : undefined\n        });\n        return await handleApiResponse(response);\n    } catch (error) {\n        console.error(\"API POST Error (\".concat(endpoint, \"):\"), error);\n        throw error;\n    }\n};\n/**\n * Make a PUT request to the API\n */ const apiPut = async function(endpoint, data) {\n    let customHeaders = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n    const url = endpoint.startsWith(\"http\") ? endpoint : \"\".concat(API_URL).concat(endpoint);\n    try {\n        const response = await fetch(url, {\n            method: \"PUT\",\n            headers: {\n                ...getApiHeaders(),\n                ...customHeaders\n            },\n            body: JSON.stringify(data)\n        });\n        return await handleApiResponse(response);\n    } catch (error) {\n        console.error(\"API PUT Error (\".concat(endpoint, \"):\"), error);\n        throw error;\n    }\n};\n/**\n * Make a DELETE request to the API\n */ const apiDelete = async function(endpoint) {\n    let customHeaders = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    const url = endpoint.startsWith(\"http\") ? endpoint : \"\".concat(API_URL).concat(endpoint);\n    try {\n        const response = await fetch(url, {\n            method: \"DELETE\",\n            headers: {\n                ...getApiHeaders(),\n                ...customHeaders\n            }\n        });\n        return await handleApiResponse(response);\n    } catch (error) {\n        console.error(\"API DELETE Error (\".concat(endpoint, \"):\"), error);\n        throw error;\n    }\n};\n/**\n * Determine if an error is an authentication error\n */ const isAuthError = (error)=>{\n    if (!error) return false;\n    const errorMessage = error.message || \"\";\n    return error.status === 401 || errorMessage.includes(\"unauthorized\") || errorMessage.includes(\"Unauthorized\") || errorMessage.includes(\"not authenticated\") || errorMessage.includes(\"Not authenticated\") || errorMessage.includes(\"invalid token\") || errorMessage.includes(\"Invalid token\") || errorMessage.includes(\"token expired\") || errorMessage.includes(\"Token expired\");\n};\n/**\n * Handle authentication errors by redirecting to login\n */ const handleAuthError = (error)=>{\n    if (isAuthError(error) && \"object\" !== \"undefined\") {\n        // Save current location for redirect after login\n        const currentPath = window.location.pathname + window.location.search;\n        if (currentPath !== \"/login\") {\n            sessionStorage.setItem(\"redirectAfterLogin\", currentPath);\n        }\n        // Clear token if it's invalid or expired\n        localStorage.removeItem(\"supabase.auth.token\");\n        // Redirect to login\n        window.location.href = \"/login\";\n        return true;\n    }\n    return false;\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/utils/apiUtils.js\n"));

/***/ })

});