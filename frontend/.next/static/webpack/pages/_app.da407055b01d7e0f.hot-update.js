"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/utils/organizationContext.js":
/*!******************************************!*\
  !*** ./src/utils/organizationContext.js ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OrganizationProvider: function() { return /* binding */ OrganizationProvider; },\n/* harmony export */   useOrganization: function() { return /* binding */ useOrganization; },\n/* harmony export */   useOrganizationApi: function() { return /* binding */ useOrganizationApi; },\n/* harmony export */   withOrganization: function() { return /* binding */ withOrganization; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _hooks_useAuth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hooks/useAuth */ \"./src/hooks/useAuth.js\");\n/**\n * Organization Context Utility\n * \n * This utility handles organization switching and management in the frontend.\n */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$();\n\n\n// Base API URL from environment\nconst API_URL = \"http://localhost:8004\" || 0;\n// Create organization context\nconst OrganizationContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(null);\n/**\n * Organization Provider component\n * Provides organization context to the application\n */ function OrganizationProvider(param) {\n    let { children } = param;\n    _s();\n    const { user, isAuthenticated } = (0,_hooks_useAuth__WEBPACK_IMPORTED_MODULE_2__.useAuth)();\n    const [organizations, setOrganizations] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [currentOrganization, setCurrentOrganization] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // Fetch user's organizations\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (isAuthenticated) {\n            fetchUserOrganizations();\n        } else {\n            setOrganizations([]);\n            setCurrentOrganization(null);\n            setLoading(false);\n        }\n    }, [\n        isAuthenticated,\n        user\n    ]);\n    // Fetch user's organizations from API\n    const fetchUserOrganizations = async ()=>{\n        try {\n            setLoading(true);\n            const response = await fetch(\"/api/organizations\", {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": \"Bearer \".concat(localStorage.getItem(\"supabase.auth.token\"))\n                }\n            });\n            if (!response.ok) {\n                throw new Error(\"Error fetching organizations: \".concat(response.statusText));\n            }\n            const data = await response.json();\n            setOrganizations(data.organizations || []);\n            // Set current organization to the default one or the first in the list\n            const defaultOrg = data.organizations.find((org)=>org.is_default);\n            setCurrentOrganization(defaultOrg || data.organizations[0] || null);\n            setLoading(false);\n        } catch (err) {\n            console.error(\"Error fetching organizations:\", err);\n            setError(err.message);\n            setLoading(false);\n        }\n    };\n    // Switch to a different organization\n    const switchOrganization = async (orgId)=>{\n        try {\n            // Find the organization in the list\n            const org = organizations.find((o)=>o.id === orgId);\n            if (!org) {\n                throw new Error(\"Organization not found\");\n            }\n            // Update current organization\n            setCurrentOrganization(org);\n            // Set as default if it's not already\n            if (!org.is_default) {\n                await setDefaultOrganization(orgId);\n            }\n            return true;\n        } catch (err) {\n            console.error(\"Error switching organization:\", err);\n            setError(err.message);\n            return false;\n        }\n    };\n    // Set default organization\n    const setDefaultOrganization = async (orgId)=>{\n        try {\n            const response = await fetch(\"/api/user/default-organization/\".concat(orgId), {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": \"Bearer \".concat(localStorage.getItem(\"supabase.auth.token\"))\n                }\n            });\n            if (!response.ok) {\n                throw new Error(\"Error setting default organization: \".concat(response.statusText));\n            }\n            // Update local state\n            setOrganizations((orgs)=>orgs.map((org)=>({\n                        ...org,\n                        is_default: org.id === orgId\n                    })));\n            return true;\n        } catch (err) {\n            console.error(\"Error setting default organization:\", err);\n            setError(err.message);\n            return false;\n        }\n    };\n    // Create a new organization\n    const createOrganization = async (orgData)=>{\n        try {\n            const response = await fetch(\"/api/organizations\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": \"Bearer \".concat(localStorage.getItem(\"supabase.auth.token\"))\n                },\n                body: JSON.stringify(orgData)\n            });\n            if (!response.ok) {\n                throw new Error(\"Error creating organization: \".concat(response.statusText));\n            }\n            const data = await response.json();\n            // Refetch organizations to get the updated list\n            await fetchUserOrganizations();\n            return data;\n        } catch (err) {\n            console.error(\"Error creating organization:\", err);\n            setError(err.message);\n            throw err;\n        }\n    };\n    // Get organization members\n    const getOrganizationMembers = async (orgId)=>{\n        try {\n            const response = await fetch(\"/api/organizations/\".concat(orgId, \"/members\"), {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": \"Bearer \".concat(localStorage.getItem(\"supabase.auth.token\"))\n                }\n            });\n            if (!response.ok) {\n                throw new Error(\"Error fetching organization members: \".concat(response.statusText));\n            }\n            const data = await response.json();\n            return data.members;\n        } catch (err) {\n            console.error(\"Error fetching organization members:\", err);\n            setError(err.message);\n            throw err;\n        }\n    };\n    // Invite a new member to the organization\n    const inviteMember = async function(orgId, email) {\n        let role = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : \"member\";\n        try {\n            const response = await fetch(\"/api/organizations/\".concat(orgId, \"/invitations\"), {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": \"Bearer \".concat(localStorage.getItem(\"supabase.auth.token\"))\n                },\n                body: JSON.stringify({\n                    email,\n                    role\n                })\n            });\n            if (!response.ok) {\n                throw new Error(\"Error inviting member: \".concat(response.statusText));\n            }\n            const data = await response.json();\n            return data;\n        } catch (err) {\n            console.error(\"Error inviting member:\", err);\n            setError(err.message);\n            throw err;\n        }\n    };\n    // Get API headers with organization context\n    const getApiHeaders = ()=>{\n        const headers = {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": \"Bearer \".concat(localStorage.getItem(\"supabase.auth.token\"))\n        };\n        if (currentOrganization) {\n            headers[\"X-Organization-ID\"] = currentOrganization.id;\n        }\n        return headers;\n    };\n    // Prepare context value\n    const contextValue = {\n        organizations,\n        currentOrganization,\n        loading,\n        error,\n        switchOrganization,\n        createOrganization,\n        getOrganizationMembers,\n        inviteMember,\n        getApiHeaders,\n        refreshOrganizations: fetchUserOrganizations\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(OrganizationContext.Provider, {\n        value: contextValue,\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/luzuko/Project_2025/sdk_next_react_version/frontend/src/utils/organizationContext.js\",\n        lineNumber: 230,\n        columnNumber: 5\n    }, this);\n}\n_s(OrganizationProvider, \"y4dj1YXKV1BsJfIbJPuQCZGdQlk=\", false, function() {\n    return [\n        _hooks_useAuth__WEBPACK_IMPORTED_MODULE_2__.useAuth\n    ];\n});\n_c = OrganizationProvider;\n/**\n * Hook to use the organization context\n */ function useOrganization() {\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(OrganizationContext);\n    if (!context) {\n        throw new Error(\"useOrganization must be used within an OrganizationProvider\");\n    }\n    return context;\n}\n_s1(useOrganization, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n/**\n * Higher-order component to add organization context to a component\n */ function withOrganization(Component) {\n    return function WithOrganizationComponent(props) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(OrganizationContext.Consumer, {\n            children: (context)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n                    ...props,\n                    organization: context\n                }, void 0, false, {\n                    fileName: \"/Users/luzuko/Project_2025/sdk_next_react_version/frontend/src/utils/organizationContext.js\",\n                    lineNumber: 254,\n                    columnNumber: 23\n                }, this)\n        }, void 0, false, {\n            fileName: \"/Users/luzuko/Project_2025/sdk_next_react_version/frontend/src/utils/organizationContext.js\",\n            lineNumber: 253,\n            columnNumber: 7\n        }, this);\n    };\n}\n/**\n * Hook to handle API requests with organization context\n */ function useOrganizationApi() {\n    _s2();\n    const { getApiHeaders, currentOrganization } = useOrganization();\n    // Make an API request with organization context\n    const apiRequest = async function(url) {\n        let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        // Get headers with organization context\n        const headers = getApiHeaders();\n        // Merge with provided options\n        const mergedOptions = {\n            ...options,\n            headers: {\n                ...headers,\n                ...options.headers || {}\n            }\n        };\n        // Make the request\n        const response = await fetch(url, mergedOptions);\n        // Handle response\n        if (!response.ok) {\n            const errorText = await response.text();\n            throw new Error(errorText || response.statusText);\n        }\n        return response.json();\n    };\n    return {\n        apiRequest,\n        orgId: currentOrganization === null || currentOrganization === void 0 ? void 0 : currentOrganization.id\n    };\n}\n_s2(useOrganizationApi, \"szhSqSAn8RZilhNWoK1wkMFSaqY=\", false, function() {\n    return [\n        useOrganization\n    ];\n});\nvar _c;\n$RefreshReg$(_c, \"OrganizationProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvb3JnYW5pemF0aW9uQ29udGV4dC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQTs7OztDQUlDOztBQUVzRTtBQUM1QjtBQUUzQyxnQ0FBZ0M7QUFDaEMsTUFBTUssVUFBVUMsdUJBQStCLElBQUk7QUFFbkQsOEJBQThCO0FBQzlCLE1BQU1HLG9DQUFzQlQsb0RBQWFBLENBQUM7QUFFMUM7OztDQUdDLEdBQ00sU0FBU1UscUJBQXFCLEtBQVk7UUFBWixFQUFFQyxRQUFRLEVBQUUsR0FBWjs7SUFDbkMsTUFBTSxFQUFFQyxJQUFJLEVBQUVDLGVBQWUsRUFBRSxHQUFHVCx1REFBT0E7SUFDekMsTUFBTSxDQUFDVSxlQUFlQyxpQkFBaUIsR0FBR2IsK0NBQVFBLENBQUMsRUFBRTtJQUNyRCxNQUFNLENBQUNjLHFCQUFxQkMsdUJBQXVCLEdBQUdmLCtDQUFRQSxDQUFDO0lBQy9ELE1BQU0sQ0FBQ2dCLFNBQVNDLFdBQVcsR0FBR2pCLCtDQUFRQSxDQUFDO0lBQ3ZDLE1BQU0sQ0FBQ2tCLE9BQU9DLFNBQVMsR0FBR25CLCtDQUFRQSxDQUFDO0lBRW5DLDZCQUE2QjtJQUM3QkMsZ0RBQVNBLENBQUM7UUFDUixJQUFJVSxpQkFBaUI7WUFDbkJTO1FBQ0YsT0FBTztZQUNMUCxpQkFBaUIsRUFBRTtZQUNuQkUsdUJBQXVCO1lBQ3ZCRSxXQUFXO1FBQ2I7SUFDRixHQUFHO1FBQUNOO1FBQWlCRDtLQUFLO0lBRTFCLHNDQUFzQztJQUN0QyxNQUFNVSx5QkFBeUI7UUFDN0IsSUFBSTtZQUNGSCxXQUFXO1lBQ1gsTUFBTUksV0FBVyxNQUFNQyxNQUFNLHNCQUFzQjtnQkFDakRDLFFBQVE7Z0JBQ1JDLFNBQVM7b0JBQ1AsZ0JBQWdCO29CQUNoQixpQkFBaUIsVUFBc0QsT0FBNUNDLGFBQWFDLE9BQU8sQ0FBQztnQkFDbEQ7WUFDRjtZQUVBLElBQUksQ0FBQ0wsU0FBU00sRUFBRSxFQUFFO2dCQUNoQixNQUFNLElBQUlDLE1BQU0saUNBQXFELE9BQXBCUCxTQUFTUSxVQUFVO1lBQ3RFO1lBRUEsTUFBTUMsT0FBTyxNQUFNVCxTQUFTVSxJQUFJO1lBQ2hDbEIsaUJBQWlCaUIsS0FBS2xCLGFBQWEsSUFBSSxFQUFFO1lBRXpDLHVFQUF1RTtZQUN2RSxNQUFNb0IsYUFBYUYsS0FBS2xCLGFBQWEsQ0FBQ3FCLElBQUksQ0FBQ0MsQ0FBQUEsTUFBT0EsSUFBSUMsVUFBVTtZQUNoRXBCLHVCQUF1QmlCLGNBQWNGLEtBQUtsQixhQUFhLENBQUMsRUFBRSxJQUFJO1lBRTlESyxXQUFXO1FBQ2IsRUFBRSxPQUFPbUIsS0FBSztZQUNaQyxRQUFRbkIsS0FBSyxDQUFDLGlDQUFpQ2tCO1lBQy9DakIsU0FBU2lCLElBQUlFLE9BQU87WUFDcEJyQixXQUFXO1FBQ2I7SUFDRjtJQUVBLHFDQUFxQztJQUNyQyxNQUFNc0IscUJBQXFCLE9BQU9DO1FBQ2hDLElBQUk7WUFDRixvQ0FBb0M7WUFDcEMsTUFBTU4sTUFBTXRCLGNBQWNxQixJQUFJLENBQUNRLENBQUFBLElBQUtBLEVBQUVDLEVBQUUsS0FBS0Y7WUFDN0MsSUFBSSxDQUFDTixLQUFLO2dCQUNSLE1BQU0sSUFBSU4sTUFBTTtZQUNsQjtZQUVBLDhCQUE4QjtZQUM5QmIsdUJBQXVCbUI7WUFFdkIscUNBQXFDO1lBQ3JDLElBQUksQ0FBQ0EsSUFBSUMsVUFBVSxFQUFFO2dCQUNuQixNQUFNUSx1QkFBdUJIO1lBQy9CO1lBRUEsT0FBTztRQUNULEVBQUUsT0FBT0osS0FBSztZQUNaQyxRQUFRbkIsS0FBSyxDQUFDLGlDQUFpQ2tCO1lBQy9DakIsU0FBU2lCLElBQUlFLE9BQU87WUFDcEIsT0FBTztRQUNUO0lBQ0Y7SUFFQSwyQkFBMkI7SUFDM0IsTUFBTUsseUJBQXlCLE9BQU9IO1FBQ3BDLElBQUk7WUFDRixNQUFNbkIsV0FBVyxNQUFNQyxNQUFNLGtDQUF3QyxPQUFOa0IsUUFBUztnQkFDdEVqQixRQUFRO2dCQUNSQyxTQUFTO29CQUNQLGdCQUFnQjtvQkFDaEIsaUJBQWlCLFVBQXNELE9BQTVDQyxhQUFhQyxPQUFPLENBQUM7Z0JBQ2xEO1lBQ0Y7WUFFQSxJQUFJLENBQUNMLFNBQVNNLEVBQUUsRUFBRTtnQkFDaEIsTUFBTSxJQUFJQyxNQUFNLHVDQUEyRCxPQUFwQlAsU0FBU1EsVUFBVTtZQUM1RTtZQUVBLHFCQUFxQjtZQUNyQmhCLGlCQUFpQitCLENBQUFBLE9BQVFBLEtBQUtDLEdBQUcsQ0FBQ1gsQ0FBQUEsTUFBUTt3QkFDeEMsR0FBR0EsR0FBRzt3QkFDTkMsWUFBWUQsSUFBSVEsRUFBRSxLQUFLRjtvQkFDekI7WUFFQSxPQUFPO1FBQ1QsRUFBRSxPQUFPSixLQUFLO1lBQ1pDLFFBQVFuQixLQUFLLENBQUMsdUNBQXVDa0I7WUFDckRqQixTQUFTaUIsSUFBSUUsT0FBTztZQUNwQixPQUFPO1FBQ1Q7SUFDRjtJQUVBLDRCQUE0QjtJQUM1QixNQUFNUSxxQkFBcUIsT0FBT0M7UUFDaEMsSUFBSTtZQUNGLE1BQU0xQixXQUFXLE1BQU1DLE1BQU0sc0JBQXNCO2dCQUNqREMsUUFBUTtnQkFDUkMsU0FBUztvQkFDUCxnQkFBZ0I7b0JBQ2hCLGlCQUFpQixVQUFzRCxPQUE1Q0MsYUFBYUMsT0FBTyxDQUFDO2dCQUNsRDtnQkFDQXNCLE1BQU1DLEtBQUtDLFNBQVMsQ0FBQ0g7WUFDdkI7WUFFQSxJQUFJLENBQUMxQixTQUFTTSxFQUFFLEVBQUU7Z0JBQ2hCLE1BQU0sSUFBSUMsTUFBTSxnQ0FBb0QsT0FBcEJQLFNBQVNRLFVBQVU7WUFDckU7WUFFQSxNQUFNQyxPQUFPLE1BQU1ULFNBQVNVLElBQUk7WUFFaEMsZ0RBQWdEO1lBQ2hELE1BQU1YO1lBRU4sT0FBT1U7UUFDVCxFQUFFLE9BQU9NLEtBQUs7WUFDWkMsUUFBUW5CLEtBQUssQ0FBQyxnQ0FBZ0NrQjtZQUM5Q2pCLFNBQVNpQixJQUFJRSxPQUFPO1lBQ3BCLE1BQU1GO1FBQ1I7SUFDRjtJQUVBLDJCQUEyQjtJQUMzQixNQUFNZSx5QkFBeUIsT0FBT1g7UUFDcEMsSUFBSTtZQUNGLE1BQU1uQixXQUFXLE1BQU1DLE1BQU0sc0JBQTRCLE9BQU5rQixPQUFNLGFBQVc7Z0JBQ2xFakIsUUFBUTtnQkFDUkMsU0FBUztvQkFDUCxnQkFBZ0I7b0JBQ2hCLGlCQUFpQixVQUFzRCxPQUE1Q0MsYUFBYUMsT0FBTyxDQUFDO2dCQUNsRDtZQUNGO1lBRUEsSUFBSSxDQUFDTCxTQUFTTSxFQUFFLEVBQUU7Z0JBQ2hCLE1BQU0sSUFBSUMsTUFBTSx3Q0FBNEQsT0FBcEJQLFNBQVNRLFVBQVU7WUFDN0U7WUFFQSxNQUFNQyxPQUFPLE1BQU1ULFNBQVNVLElBQUk7WUFDaEMsT0FBT0QsS0FBS3NCLE9BQU87UUFDckIsRUFBRSxPQUFPaEIsS0FBSztZQUNaQyxRQUFRbkIsS0FBSyxDQUFDLHdDQUF3Q2tCO1lBQ3REakIsU0FBU2lCLElBQUlFLE9BQU87WUFDcEIsTUFBTUY7UUFDUjtJQUNGO0lBRUEsMENBQTBDO0lBQzFDLE1BQU1pQixlQUFlLGVBQU9iLE9BQU9jO1lBQU9DLHdFQUFPO1FBQy9DLElBQUk7WUFDRixNQUFNbEMsV0FBVyxNQUFNQyxNQUFNLHNCQUE0QixPQUFOa0IsT0FBTSxpQkFBZTtnQkFDdEVqQixRQUFRO2dCQUNSQyxTQUFTO29CQUNQLGdCQUFnQjtvQkFDaEIsaUJBQWlCLFVBQXNELE9BQTVDQyxhQUFhQyxPQUFPLENBQUM7Z0JBQ2xEO2dCQUNBc0IsTUFBTUMsS0FBS0MsU0FBUyxDQUFDO29CQUFFSTtvQkFBT0M7Z0JBQUs7WUFDckM7WUFFQSxJQUFJLENBQUNsQyxTQUFTTSxFQUFFLEVBQUU7Z0JBQ2hCLE1BQU0sSUFBSUMsTUFBTSwwQkFBOEMsT0FBcEJQLFNBQVNRLFVBQVU7WUFDL0Q7WUFFQSxNQUFNQyxPQUFPLE1BQU1ULFNBQVNVLElBQUk7WUFDaEMsT0FBT0Q7UUFDVCxFQUFFLE9BQU9NLEtBQUs7WUFDWkMsUUFBUW5CLEtBQUssQ0FBQywwQkFBMEJrQjtZQUN4Q2pCLFNBQVNpQixJQUFJRSxPQUFPO1lBQ3BCLE1BQU1GO1FBQ1I7SUFDRjtJQUVBLDRDQUE0QztJQUM1QyxNQUFNb0IsZ0JBQWdCO1FBQ3BCLE1BQU1oQyxVQUFVO1lBQ2QsZ0JBQWdCO1lBQ2hCLGlCQUFpQixVQUFzRCxPQUE1Q0MsYUFBYUMsT0FBTyxDQUFDO1FBQ2xEO1FBRUEsSUFBSVoscUJBQXFCO1lBQ3ZCVSxPQUFPLENBQUMsb0JBQW9CLEdBQUdWLG9CQUFvQjRCLEVBQUU7UUFDdkQ7UUFFQSxPQUFPbEI7SUFDVDtJQUVBLHdCQUF3QjtJQUN4QixNQUFNaUMsZUFBZTtRQUNuQjdDO1FBQ0FFO1FBQ0FFO1FBQ0FFO1FBQ0FxQjtRQUNBTztRQUNBSztRQUNBRTtRQUNBRztRQUNBRSxzQkFBc0J0QztJQUN4QjtJQUVBLHFCQUNFLDhEQUFDYixvQkFBb0JvRCxRQUFRO1FBQUNDLE9BQU9IO2tCQUNsQ2hEOzs7Ozs7QUFHUDtHQXROZ0JEOztRQUNvQk4sbURBQU9BOzs7S0FEM0JNO0FBd05oQjs7Q0FFQyxHQUNNLFNBQVNxRDs7SUFDZCxNQUFNQyxVQUFVL0QsaURBQVVBLENBQUNRO0lBQzNCLElBQUksQ0FBQ3VELFNBQVM7UUFDWixNQUFNLElBQUlsQyxNQUFNO0lBQ2xCO0lBQ0EsT0FBT2tDO0FBQ1Q7SUFOZ0JEO0FBUWhCOztDQUVDLEdBQ00sU0FBU0UsaUJBQWlCQyxTQUFTO0lBQ3hDLE9BQU8sU0FBU0MsMEJBQTBCQyxLQUFLO1FBQzdDLHFCQUNFLDhEQUFDM0Qsb0JBQW9CNEQsUUFBUTtzQkFDMUIsQ0FBQ0wsd0JBQVksOERBQUNFO29CQUFXLEdBQUdFLEtBQUs7b0JBQUVFLGNBQWNOOzs7Ozs7Ozs7OztJQUd4RDtBQUNGO0FBRUE7O0NBRUMsR0FDTSxTQUFTTzs7SUFDZCxNQUFNLEVBQUViLGFBQWEsRUFBRTFDLG1CQUFtQixFQUFFLEdBQUcrQztJQUUvQyxnREFBZ0Q7SUFDaEQsTUFBTVMsYUFBYSxlQUFPQztZQUFLQywyRUFBVSxDQUFDO1FBQ3hDLHdDQUF3QztRQUN4QyxNQUFNaEQsVUFBVWdDO1FBRWhCLDhCQUE4QjtRQUM5QixNQUFNaUIsZ0JBQWdCO1lBQ3BCLEdBQUdELE9BQU87WUFDVmhELFNBQVM7Z0JBQ1AsR0FBR0EsT0FBTztnQkFDVixHQUFJZ0QsUUFBUWhELE9BQU8sSUFBSSxDQUFDLENBQUM7WUFDM0I7UUFDRjtRQUVBLG1CQUFtQjtRQUNuQixNQUFNSCxXQUFXLE1BQU1DLE1BQU1pRCxLQUFLRTtRQUVsQyxrQkFBa0I7UUFDbEIsSUFBSSxDQUFDcEQsU0FBU00sRUFBRSxFQUFFO1lBQ2hCLE1BQU0rQyxZQUFZLE1BQU1yRCxTQUFTc0QsSUFBSTtZQUNyQyxNQUFNLElBQUkvQyxNQUFNOEMsYUFBYXJELFNBQVNRLFVBQVU7UUFDbEQ7UUFFQSxPQUFPUixTQUFTVSxJQUFJO0lBQ3RCO0lBRUEsT0FBTztRQUNMdUM7UUFDQTlCLEtBQUssRUFBRTFCLGdDQUFBQSwwQ0FBQUEsb0JBQXFCNEIsRUFBRTtJQUNoQztBQUNGO0lBakNnQjJCOztRQUNpQ1IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL3V0aWxzL29yZ2FuaXphdGlvbkNvbnRleHQuanM/Zjg4MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIE9yZ2FuaXphdGlvbiBDb250ZXh0IFV0aWxpdHlcbiAqIFxuICogVGhpcyB1dGlsaXR5IGhhbmRsZXMgb3JnYW5pemF0aW9uIHN3aXRjaGluZyBhbmQgbWFuYWdlbWVudCBpbiB0aGUgZnJvbnRlbmQuXG4gKi9cblxuaW1wb3J0IHsgY3JlYXRlQ29udGV4dCwgdXNlQ29udGV4dCwgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZUF1dGggfSBmcm9tICcuLi9ob29rcy91c2VBdXRoJztcblxuLy8gQmFzZSBBUEkgVVJMIGZyb20gZW52aXJvbm1lbnRcbmNvbnN0IEFQSV9VUkwgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19BUElfVVJMIHx8ICdodHRwOi8vbG9jYWxob3N0OjgwMDMnO1xuXG4vLyBDcmVhdGUgb3JnYW5pemF0aW9uIGNvbnRleHRcbmNvbnN0IE9yZ2FuaXphdGlvbkNvbnRleHQgPSBjcmVhdGVDb250ZXh0KG51bGwpO1xuXG4vKipcbiAqIE9yZ2FuaXphdGlvbiBQcm92aWRlciBjb21wb25lbnRcbiAqIFByb3ZpZGVzIG9yZ2FuaXphdGlvbiBjb250ZXh0IHRvIHRoZSBhcHBsaWNhdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gT3JnYW5pemF0aW9uUHJvdmlkZXIoeyBjaGlsZHJlbiB9KSB7XG4gIGNvbnN0IHsgdXNlciwgaXNBdXRoZW50aWNhdGVkIH0gPSB1c2VBdXRoKCk7XG4gIGNvbnN0IFtvcmdhbml6YXRpb25zLCBzZXRPcmdhbml6YXRpb25zXSA9IHVzZVN0YXRlKFtdKTtcbiAgY29uc3QgW2N1cnJlbnRPcmdhbml6YXRpb24sIHNldEN1cnJlbnRPcmdhbml6YXRpb25dID0gdXNlU3RhdGUobnVsbCk7XG4gIGNvbnN0IFtsb2FkaW5nLCBzZXRMb2FkaW5nXSA9IHVzZVN0YXRlKHRydWUpO1xuICBjb25zdCBbZXJyb3IsIHNldEVycm9yXSA9IHVzZVN0YXRlKG51bGwpO1xuXG4gIC8vIEZldGNoIHVzZXIncyBvcmdhbml6YXRpb25zXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKGlzQXV0aGVudGljYXRlZCkge1xuICAgICAgZmV0Y2hVc2VyT3JnYW5pemF0aW9ucygpO1xuICAgIH0gZWxzZSB7XG4gICAgICBzZXRPcmdhbml6YXRpb25zKFtdKTtcbiAgICAgIHNldEN1cnJlbnRPcmdhbml6YXRpb24obnVsbCk7XG4gICAgICBzZXRMb2FkaW5nKGZhbHNlKTtcbiAgICB9XG4gIH0sIFtpc0F1dGhlbnRpY2F0ZWQsIHVzZXJdKTtcblxuICAvLyBGZXRjaCB1c2VyJ3Mgb3JnYW5pemF0aW9ucyBmcm9tIEFQSVxuICBjb25zdCBmZXRjaFVzZXJPcmdhbml6YXRpb25zID0gYXN5bmMgKCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICBzZXRMb2FkaW5nKHRydWUpO1xuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnL2FwaS9vcmdhbml6YXRpb25zJywge1xuICAgICAgICBtZXRob2Q6ICdHRVQnLFxuICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgICAnQXV0aG9yaXphdGlvbic6IGBCZWFyZXIgJHtsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnc3VwYWJhc2UuYXV0aC50b2tlbicpfWAsXG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgRXJyb3IgZmV0Y2hpbmcgb3JnYW5pemF0aW9uczogJHtyZXNwb25zZS5zdGF0dXNUZXh0fWApO1xuICAgICAgfVxuXG4gICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgICAgc2V0T3JnYW5pemF0aW9ucyhkYXRhLm9yZ2FuaXphdGlvbnMgfHwgW10pO1xuICAgICAgXG4gICAgICAvLyBTZXQgY3VycmVudCBvcmdhbml6YXRpb24gdG8gdGhlIGRlZmF1bHQgb25lIG9yIHRoZSBmaXJzdCBpbiB0aGUgbGlzdFxuICAgICAgY29uc3QgZGVmYXVsdE9yZyA9IGRhdGEub3JnYW5pemF0aW9ucy5maW5kKG9yZyA9PiBvcmcuaXNfZGVmYXVsdCk7XG4gICAgICBzZXRDdXJyZW50T3JnYW5pemF0aW9uKGRlZmF1bHRPcmcgfHwgZGF0YS5vcmdhbml6YXRpb25zWzBdIHx8IG51bGwpO1xuICAgICAgXG4gICAgICBzZXRMb2FkaW5nKGZhbHNlKTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIG9yZ2FuaXphdGlvbnM6JywgZXJyKTtcbiAgICAgIHNldEVycm9yKGVyci5tZXNzYWdlKTtcbiAgICAgIHNldExvYWRpbmcoZmFsc2UpO1xuICAgIH1cbiAgfTtcblxuICAvLyBTd2l0Y2ggdG8gYSBkaWZmZXJlbnQgb3JnYW5pemF0aW9uXG4gIGNvbnN0IHN3aXRjaE9yZ2FuaXphdGlvbiA9IGFzeW5jIChvcmdJZCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICAvLyBGaW5kIHRoZSBvcmdhbml6YXRpb24gaW4gdGhlIGxpc3RcbiAgICAgIGNvbnN0IG9yZyA9IG9yZ2FuaXphdGlvbnMuZmluZChvID0+IG8uaWQgPT09IG9yZ0lkKTtcbiAgICAgIGlmICghb3JnKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignT3JnYW5pemF0aW9uIG5vdCBmb3VuZCcpO1xuICAgICAgfVxuXG4gICAgICAvLyBVcGRhdGUgY3VycmVudCBvcmdhbml6YXRpb25cbiAgICAgIHNldEN1cnJlbnRPcmdhbml6YXRpb24ob3JnKTtcblxuICAgICAgLy8gU2V0IGFzIGRlZmF1bHQgaWYgaXQncyBub3QgYWxyZWFkeVxuICAgICAgaWYgKCFvcmcuaXNfZGVmYXVsdCkge1xuICAgICAgICBhd2FpdCBzZXREZWZhdWx0T3JnYW5pemF0aW9uKG9yZ0lkKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBzd2l0Y2hpbmcgb3JnYW5pemF0aW9uOicsIGVycik7XG4gICAgICBzZXRFcnJvcihlcnIubWVzc2FnZSk7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9O1xuXG4gIC8vIFNldCBkZWZhdWx0IG9yZ2FuaXphdGlvblxuICBjb25zdCBzZXREZWZhdWx0T3JnYW5pemF0aW9uID0gYXN5bmMgKG9yZ0lkKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYC9hcGkvdXNlci9kZWZhdWx0LW9yZ2FuaXphdGlvbi8ke29yZ0lkfWAsIHtcbiAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICAgICdBdXRob3JpemF0aW9uJzogYEJlYXJlciAke2xvY2FsU3RvcmFnZS5nZXRJdGVtKCdzdXBhYmFzZS5hdXRoLnRva2VuJyl9YCxcbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBFcnJvciBzZXR0aW5nIGRlZmF1bHQgb3JnYW5pemF0aW9uOiAke3Jlc3BvbnNlLnN0YXR1c1RleHR9YCk7XG4gICAgICB9XG5cbiAgICAgIC8vIFVwZGF0ZSBsb2NhbCBzdGF0ZVxuICAgICAgc2V0T3JnYW5pemF0aW9ucyhvcmdzID0+IG9yZ3MubWFwKG9yZyA9PiAoe1xuICAgICAgICAuLi5vcmcsXG4gICAgICAgIGlzX2RlZmF1bHQ6IG9yZy5pZCA9PT0gb3JnSWRcbiAgICAgIH0pKSk7XG5cbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgY29uc29sZS5lcnJvcignRXJyb3Igc2V0dGluZyBkZWZhdWx0IG9yZ2FuaXphdGlvbjonLCBlcnIpO1xuICAgICAgc2V0RXJyb3IoZXJyLm1lc3NhZ2UpO1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfTtcblxuICAvLyBDcmVhdGUgYSBuZXcgb3JnYW5pemF0aW9uXG4gIGNvbnN0IGNyZWF0ZU9yZ2FuaXphdGlvbiA9IGFzeW5jIChvcmdEYXRhKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJy9hcGkvb3JnYW5pemF0aW9ucycsIHtcbiAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICAgICdBdXRob3JpemF0aW9uJzogYEJlYXJlciAke2xvY2FsU3RvcmFnZS5nZXRJdGVtKCdzdXBhYmFzZS5hdXRoLnRva2VuJyl9YCxcbiAgICAgICAgfSxcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkob3JnRGF0YSksXG4gICAgICB9KTtcblxuICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEVycm9yIGNyZWF0aW5nIG9yZ2FuaXphdGlvbjogJHtyZXNwb25zZS5zdGF0dXNUZXh0fWApO1xuICAgICAgfVxuXG4gICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgICAgXG4gICAgICAvLyBSZWZldGNoIG9yZ2FuaXphdGlvbnMgdG8gZ2V0IHRoZSB1cGRhdGVkIGxpc3RcbiAgICAgIGF3YWl0IGZldGNoVXNlck9yZ2FuaXphdGlvbnMoKTtcbiAgICAgIFxuICAgICAgcmV0dXJuIGRhdGE7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBjcmVhdGluZyBvcmdhbml6YXRpb246JywgZXJyKTtcbiAgICAgIHNldEVycm9yKGVyci5tZXNzYWdlKTtcbiAgICAgIHRocm93IGVycjtcbiAgICB9XG4gIH07XG5cbiAgLy8gR2V0IG9yZ2FuaXphdGlvbiBtZW1iZXJzXG4gIGNvbnN0IGdldE9yZ2FuaXphdGlvbk1lbWJlcnMgPSBhc3luYyAob3JnSWQpID0+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgL2FwaS9vcmdhbml6YXRpb25zLyR7b3JnSWR9L21lbWJlcnNgLCB7XG4gICAgICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICAgICdBdXRob3JpemF0aW9uJzogYEJlYXJlciAke2xvY2FsU3RvcmFnZS5nZXRJdGVtKCdzdXBhYmFzZS5hdXRoLnRva2VuJyl9YCxcbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBFcnJvciBmZXRjaGluZyBvcmdhbml6YXRpb24gbWVtYmVyczogJHtyZXNwb25zZS5zdGF0dXNUZXh0fWApO1xuICAgICAgfVxuXG4gICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgICAgcmV0dXJuIGRhdGEubWVtYmVycztcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIG9yZ2FuaXphdGlvbiBtZW1iZXJzOicsIGVycik7XG4gICAgICBzZXRFcnJvcihlcnIubWVzc2FnZSk7XG4gICAgICB0aHJvdyBlcnI7XG4gICAgfVxuICB9O1xuXG4gIC8vIEludml0ZSBhIG5ldyBtZW1iZXIgdG8gdGhlIG9yZ2FuaXphdGlvblxuICBjb25zdCBpbnZpdGVNZW1iZXIgPSBhc3luYyAob3JnSWQsIGVtYWlsLCByb2xlID0gJ21lbWJlcicpID0+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgL2FwaS9vcmdhbml6YXRpb25zLyR7b3JnSWR9L2ludml0YXRpb25zYCwge1xuICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICAgICAgJ0F1dGhvcml6YXRpb24nOiBgQmVhcmVyICR7bG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3N1cGFiYXNlLmF1dGgudG9rZW4nKX1gLFxuICAgICAgICB9LFxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IGVtYWlsLCByb2xlIH0pLFxuICAgICAgfSk7XG5cbiAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBFcnJvciBpbnZpdGluZyBtZW1iZXI6ICR7cmVzcG9uc2Uuc3RhdHVzVGV4dH1gKTtcbiAgICAgIH1cblxuICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICAgIHJldHVybiBkYXRhO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgaW52aXRpbmcgbWVtYmVyOicsIGVycik7XG4gICAgICBzZXRFcnJvcihlcnIubWVzc2FnZSk7XG4gICAgICB0aHJvdyBlcnI7XG4gICAgfVxuICB9O1xuXG4gIC8vIEdldCBBUEkgaGVhZGVycyB3aXRoIG9yZ2FuaXphdGlvbiBjb250ZXh0XG4gIGNvbnN0IGdldEFwaUhlYWRlcnMgPSAoKSA9PiB7XG4gICAgY29uc3QgaGVhZGVycyA9IHtcbiAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICAnQXV0aG9yaXphdGlvbic6IGBCZWFyZXIgJHtsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnc3VwYWJhc2UuYXV0aC50b2tlbicpfWAsXG4gICAgfTtcblxuICAgIGlmIChjdXJyZW50T3JnYW5pemF0aW9uKSB7XG4gICAgICBoZWFkZXJzWydYLU9yZ2FuaXphdGlvbi1JRCddID0gY3VycmVudE9yZ2FuaXphdGlvbi5pZDtcbiAgICB9XG5cbiAgICByZXR1cm4gaGVhZGVycztcbiAgfTtcblxuICAvLyBQcmVwYXJlIGNvbnRleHQgdmFsdWVcbiAgY29uc3QgY29udGV4dFZhbHVlID0ge1xuICAgIG9yZ2FuaXphdGlvbnMsXG4gICAgY3VycmVudE9yZ2FuaXphdGlvbixcbiAgICBsb2FkaW5nLFxuICAgIGVycm9yLFxuICAgIHN3aXRjaE9yZ2FuaXphdGlvbixcbiAgICBjcmVhdGVPcmdhbml6YXRpb24sXG4gICAgZ2V0T3JnYW5pemF0aW9uTWVtYmVycyxcbiAgICBpbnZpdGVNZW1iZXIsXG4gICAgZ2V0QXBpSGVhZGVycyxcbiAgICByZWZyZXNoT3JnYW5pemF0aW9uczogZmV0Y2hVc2VyT3JnYW5pemF0aW9ucyxcbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxPcmdhbml6YXRpb25Db250ZXh0LlByb3ZpZGVyIHZhbHVlPXtjb250ZXh0VmFsdWV9PlxuICAgICAge2NoaWxkcmVufVxuICAgIDwvT3JnYW5pemF0aW9uQ29udGV4dC5Qcm92aWRlcj5cbiAgKTtcbn1cblxuLyoqXG4gKiBIb29rIHRvIHVzZSB0aGUgb3JnYW5pemF0aW9uIGNvbnRleHRcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHVzZU9yZ2FuaXphdGlvbigpIHtcbiAgY29uc3QgY29udGV4dCA9IHVzZUNvbnRleHQoT3JnYW5pemF0aW9uQ29udGV4dCk7XG4gIGlmICghY29udGV4dCkge1xuICAgIHRocm93IG5ldyBFcnJvcigndXNlT3JnYW5pemF0aW9uIG11c3QgYmUgdXNlZCB3aXRoaW4gYW4gT3JnYW5pemF0aW9uUHJvdmlkZXInKTtcbiAgfVxuICByZXR1cm4gY29udGV4dDtcbn1cblxuLyoqXG4gKiBIaWdoZXItb3JkZXIgY29tcG9uZW50IHRvIGFkZCBvcmdhbml6YXRpb24gY29udGV4dCB0byBhIGNvbXBvbmVudFxuICovXG5leHBvcnQgZnVuY3Rpb24gd2l0aE9yZ2FuaXphdGlvbihDb21wb25lbnQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIFdpdGhPcmdhbml6YXRpb25Db21wb25lbnQocHJvcHMpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPE9yZ2FuaXphdGlvbkNvbnRleHQuQ29uc3VtZXI+XG4gICAgICAgIHsoY29udGV4dCkgPT4gPENvbXBvbmVudCB7Li4ucHJvcHN9IG9yZ2FuaXphdGlvbj17Y29udGV4dH0gLz59XG4gICAgICA8L09yZ2FuaXphdGlvbkNvbnRleHQuQ29uc3VtZXI+XG4gICAgKTtcbiAgfTtcbn1cblxuLyoqXG4gKiBIb29rIHRvIGhhbmRsZSBBUEkgcmVxdWVzdHMgd2l0aCBvcmdhbml6YXRpb24gY29udGV4dFxuICovXG5leHBvcnQgZnVuY3Rpb24gdXNlT3JnYW5pemF0aW9uQXBpKCkge1xuICBjb25zdCB7IGdldEFwaUhlYWRlcnMsIGN1cnJlbnRPcmdhbml6YXRpb24gfSA9IHVzZU9yZ2FuaXphdGlvbigpO1xuICBcbiAgLy8gTWFrZSBhbiBBUEkgcmVxdWVzdCB3aXRoIG9yZ2FuaXphdGlvbiBjb250ZXh0XG4gIGNvbnN0IGFwaVJlcXVlc3QgPSBhc3luYyAodXJsLCBvcHRpb25zID0ge30pID0+IHtcbiAgICAvLyBHZXQgaGVhZGVycyB3aXRoIG9yZ2FuaXphdGlvbiBjb250ZXh0XG4gICAgY29uc3QgaGVhZGVycyA9IGdldEFwaUhlYWRlcnMoKTtcbiAgICBcbiAgICAvLyBNZXJnZSB3aXRoIHByb3ZpZGVkIG9wdGlvbnNcbiAgICBjb25zdCBtZXJnZWRPcHRpb25zID0ge1xuICAgICAgLi4ub3B0aW9ucyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgLi4uaGVhZGVycyxcbiAgICAgICAgLi4uKG9wdGlvbnMuaGVhZGVycyB8fCB7fSksXG4gICAgICB9LFxuICAgIH07XG4gICAgXG4gICAgLy8gTWFrZSB0aGUgcmVxdWVzdFxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsLCBtZXJnZWRPcHRpb25zKTtcbiAgICBcbiAgICAvLyBIYW5kbGUgcmVzcG9uc2VcbiAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICBjb25zdCBlcnJvclRleHQgPSBhd2FpdCByZXNwb25zZS50ZXh0KCk7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoZXJyb3JUZXh0IHx8IHJlc3BvbnNlLnN0YXR1c1RleHQpO1xuICAgIH1cbiAgICBcbiAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpO1xuICB9O1xuICBcbiAgcmV0dXJuIHtcbiAgICBhcGlSZXF1ZXN0LFxuICAgIG9yZ0lkOiBjdXJyZW50T3JnYW5pemF0aW9uPy5pZCxcbiAgfTtcbn0iXSwibmFtZXMiOlsiY3JlYXRlQ29udGV4dCIsInVzZUNvbnRleHQiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsInVzZUF1dGgiLCJBUElfVVJMIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX0FQSV9VUkwiLCJPcmdhbml6YXRpb25Db250ZXh0IiwiT3JnYW5pemF0aW9uUHJvdmlkZXIiLCJjaGlsZHJlbiIsInVzZXIiLCJpc0F1dGhlbnRpY2F0ZWQiLCJvcmdhbml6YXRpb25zIiwic2V0T3JnYW5pemF0aW9ucyIsImN1cnJlbnRPcmdhbml6YXRpb24iLCJzZXRDdXJyZW50T3JnYW5pemF0aW9uIiwibG9hZGluZyIsInNldExvYWRpbmciLCJlcnJvciIsInNldEVycm9yIiwiZmV0Y2hVc2VyT3JnYW5pemF0aW9ucyIsInJlc3BvbnNlIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsIm9rIiwiRXJyb3IiLCJzdGF0dXNUZXh0IiwiZGF0YSIsImpzb24iLCJkZWZhdWx0T3JnIiwiZmluZCIsIm9yZyIsImlzX2RlZmF1bHQiLCJlcnIiLCJjb25zb2xlIiwibWVzc2FnZSIsInN3aXRjaE9yZ2FuaXphdGlvbiIsIm9yZ0lkIiwibyIsImlkIiwic2V0RGVmYXVsdE9yZ2FuaXphdGlvbiIsIm9yZ3MiLCJtYXAiLCJjcmVhdGVPcmdhbml6YXRpb24iLCJvcmdEYXRhIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJnZXRPcmdhbml6YXRpb25NZW1iZXJzIiwibWVtYmVycyIsImludml0ZU1lbWJlciIsImVtYWlsIiwicm9sZSIsImdldEFwaUhlYWRlcnMiLCJjb250ZXh0VmFsdWUiLCJyZWZyZXNoT3JnYW5pemF0aW9ucyIsIlByb3ZpZGVyIiwidmFsdWUiLCJ1c2VPcmdhbml6YXRpb24iLCJjb250ZXh0Iiwid2l0aE9yZ2FuaXphdGlvbiIsIkNvbXBvbmVudCIsIldpdGhPcmdhbml6YXRpb25Db21wb25lbnQiLCJwcm9wcyIsIkNvbnN1bWVyIiwib3JnYW5pemF0aW9uIiwidXNlT3JnYW5pemF0aW9uQXBpIiwiYXBpUmVxdWVzdCIsInVybCIsIm9wdGlvbnMiLCJtZXJnZWRPcHRpb25zIiwiZXJyb3JUZXh0IiwidGV4dCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/utils/organizationContext.js\n"));

/***/ })

});