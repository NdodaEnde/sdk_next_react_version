"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/utils/apiUtils.js":
/*!*******************************!*\
  !*** ./src/utils/apiUtils.js ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiDelete: function() { return /* binding */ apiDelete; },\n/* harmony export */   apiGet: function() { return /* binding */ apiGet; },\n/* harmony export */   apiPost: function() { return /* binding */ apiPost; },\n/* harmony export */   apiPut: function() { return /* binding */ apiPut; },\n/* harmony export */   getApiHeaders: function() { return /* binding */ getApiHeaders; },\n/* harmony export */   handleApiResponse: function() { return /* binding */ handleApiResponse; },\n/* harmony export */   handleAuthError: function() { return /* binding */ handleAuthError; },\n/* harmony export */   isAuthError: function() { return /* binding */ isAuthError; }\n/* harmony export */ });\n/**\n * API utilities for making authenticated requests to the backend\n */ // Base API URL from environment\nconst API_URL = \"http://localhost:8004\" || 0;\n/**\n * Get common headers for API requests including authorization if available\n */ const getApiHeaders = ()=>{\n    const headers = {\n        \"Content-Type\": \"application/json\"\n    };\n    // Add authorization token if available\n    const token = localStorage.getItem(\"supabase.auth.token\");\n    if (token) {\n        headers[\"Authorization\"] = \"Bearer \".concat(token);\n    }\n    // Add organization context header if available\n    const orgId = localStorage.getItem(\"currentOrganizationId\");\n    if (orgId) {\n        headers[\"X-Organization-ID\"] = orgId;\n    }\n    return headers;\n};\n/**\n * Handle API response and extract data or error\n */ const handleApiResponse = async (response)=>{\n    // First check if the response is ok (status in the range 200-299)\n    if (!response.ok) {\n        let errorMessage;\n        try {\n            // Try to parse error as JSON\n            const errorData = await response.json();\n            errorMessage = errorData.error || errorData.message || \"API Error: \".concat(response.status, \" \").concat(response.statusText);\n        } catch (e) {\n            // If parsing fails, use status text\n            errorMessage = \"API Error: \".concat(response.status, \" \").concat(response.statusText);\n        }\n        // Throw error to be caught by the caller\n        throw new Error(errorMessage);\n    }\n    // For empty responses (like 204 No Content)\n    if (response.status === 204) {\n        return {\n            success: true\n        };\n    }\n    // For successful responses with content, parse JSON\n    return await response.json();\n};\n/**\n * Make a GET request to the API\n */ const apiGet = async function(endpoint) {\n    let customHeaders = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    const url = endpoint.startsWith(\"http\") ? endpoint : \"\".concat(API_URL).concat(endpoint);\n    try {\n        const response = await fetch(url, {\n            method: \"GET\",\n            headers: {\n                ...getApiHeaders(),\n                ...customHeaders\n            }\n        });\n        return await handleApiResponse(response);\n    } catch (error) {\n        console.error(\"API GET Error (\".concat(endpoint, \"):\"), error);\n        throw error;\n    }\n};\n/**\n * Make a POST request to the API\n */ const apiPost = async function(endpoint) {\n    let data = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, customHeaders = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n    const url = endpoint.startsWith(\"http\") ? endpoint : \"\".concat(API_URL).concat(endpoint);\n    try {\n        const response = await fetch(url, {\n            method: \"POST\",\n            headers: {\n                ...getApiHeaders(),\n                ...customHeaders\n            },\n            body: data ? JSON.stringify(data) : undefined\n        });\n        return await handleApiResponse(response);\n    } catch (error) {\n        console.error(\"API POST Error (\".concat(endpoint, \"):\"), error);\n        throw error;\n    }\n};\n/**\n * Make a PUT request to the API\n */ const apiPut = async function(endpoint, data) {\n    let customHeaders = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n    const url = endpoint.startsWith(\"http\") ? endpoint : \"\".concat(API_URL).concat(endpoint);\n    try {\n        const response = await fetch(url, {\n            method: \"PUT\",\n            headers: {\n                ...getApiHeaders(),\n                ...customHeaders\n            },\n            body: JSON.stringify(data)\n        });\n        return await handleApiResponse(response);\n    } catch (error) {\n        console.error(\"API PUT Error (\".concat(endpoint, \"):\"), error);\n        throw error;\n    }\n};\n/**\n * Make a DELETE request to the API\n */ const apiDelete = async function(endpoint) {\n    let customHeaders = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    const url = endpoint.startsWith(\"http\") ? endpoint : \"\".concat(API_URL).concat(endpoint);\n    try {\n        const response = await fetch(url, {\n            method: \"DELETE\",\n            headers: {\n                ...getApiHeaders(),\n                ...customHeaders\n            }\n        });\n        return await handleApiResponse(response);\n    } catch (error) {\n        console.error(\"API DELETE Error (\".concat(endpoint, \"):\"), error);\n        throw error;\n    }\n};\n/**\n * Determine if an error is an authentication error\n */ const isAuthError = (error)=>{\n    if (!error) return false;\n    const errorMessage = error.message || \"\";\n    return error.status === 401 || errorMessage.includes(\"unauthorized\") || errorMessage.includes(\"Unauthorized\") || errorMessage.includes(\"not authenticated\") || errorMessage.includes(\"Not authenticated\") || errorMessage.includes(\"invalid token\") || errorMessage.includes(\"Invalid token\") || errorMessage.includes(\"token expired\") || errorMessage.includes(\"Token expired\");\n};\n/**\n * Handle authentication errors by redirecting to login\n */ const handleAuthError = (error)=>{\n    if (isAuthError(error) && \"object\" !== \"undefined\") {\n        // Save current location for redirect after login\n        const currentPath = window.location.pathname + window.location.search;\n        if (currentPath !== \"/login\") {\n            sessionStorage.setItem(\"redirectAfterLogin\", currentPath);\n        }\n        // Clear token if it's invalid or expired\n        localStorage.removeItem(\"supabase.auth.token\");\n        // Redirect to login\n        window.location.href = \"/login\";\n        return true;\n    }\n    return false;\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/utils/apiUtils.js\n"));

/***/ }),

/***/ "./src/utils/organizationContext.js":
/*!******************************************!*\
  !*** ./src/utils/organizationContext.js ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OrganizationProvider: function() { return /* binding */ OrganizationProvider; },\n/* harmony export */   useOrganization: function() { return /* binding */ useOrganization; },\n/* harmony export */   useOrganizationApi: function() { return /* binding */ useOrganizationApi; },\n/* harmony export */   withOrganization: function() { return /* binding */ withOrganization; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _hooks_useAuth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hooks/useAuth */ \"./src/hooks/useAuth.js\");\n/* harmony import */ var _apiUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./apiUtils */ \"./src/utils/apiUtils.js\");\n/**\n * Organization Context Utility\n * \n * This utility handles organization switching and management in the frontend.\n */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$();\n\n\n\n// Create organization context\nconst OrganizationContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(null);\n/**\n * Organization Provider component\n * Provides organization context to the application\n */ function OrganizationProvider(param) {\n    let { children } = param;\n    _s();\n    const { user, isAuthenticated } = (0,_hooks_useAuth__WEBPACK_IMPORTED_MODULE_2__.useAuth)();\n    const [organizations, setOrganizations] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [currentOrganization, setCurrentOrganization] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // Fetch user's organizations\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (isAuthenticated) {\n            fetchUserOrganizations();\n        } else {\n            setOrganizations([]);\n            setCurrentOrganization(null);\n            setLoading(false);\n        }\n    }, [\n        isAuthenticated,\n        user\n    ]);\n    // Fetch user's organizations from API\n    const fetchUserOrganizations = async ()=>{\n        try {\n            setLoading(true);\n            const data = await (0,_apiUtils__WEBPACK_IMPORTED_MODULE_3__.apiGet)(\"/api/organizations\");\n            setOrganizations(data.organizations || []);\n            // Set current organization to the default one or the first in the list\n            const defaultOrg = data.organizations.find((org)=>org.is_default);\n            setCurrentOrganization(defaultOrg || data.organizations[0] || null);\n            setLoading(false);\n        } catch (err) {\n            console.error(\"Error fetching organizations:\", err);\n            // For development, use mock data if API call fails\n            if (true) {\n                console.log(\"Using mock organization data for development\");\n                const mockOrgs = [\n                    {\n                        id: \"org1\",\n                        name: \"Metro Health Services\",\n                        slug: \"metro-health\",\n                        description: \"Main healthcare services organization\",\n                        role: \"owner\",\n                        is_default: true\n                    },\n                    {\n                        id: \"org2\",\n                        name: \"Western Cape Medical\",\n                        slug: \"western-cape-medical\",\n                        description: \"Regional healthcare provider\",\n                        role: \"member\",\n                        is_default: false\n                    }\n                ];\n                setOrganizations(mockOrgs);\n                setCurrentOrganization(mockOrgs[0]);\n            }\n            setError(err.message);\n            setLoading(false);\n        }\n    };\n    // Switch to a different organization\n    const switchOrganization = async (orgId)=>{\n        try {\n            // Find the organization in the list\n            const org = organizations.find((o)=>o.id === orgId);\n            if (!org) {\n                throw new Error(\"Organization not found\");\n            }\n            // Update current organization\n            setCurrentOrganization(org);\n            // Set as default if it's not already\n            if (!org.is_default) {\n                await setDefaultOrganization(orgId);\n            }\n            return true;\n        } catch (err) {\n            console.error(\"Error switching organization:\", err);\n            setError(err.message);\n            return false;\n        }\n    };\n    // Set default organization\n    const setDefaultOrganization = async (orgId)=>{\n        try {\n            await (0,_apiUtils__WEBPACK_IMPORTED_MODULE_3__.apiPost)(\"/api/user/default-organization/\".concat(orgId));\n            // Update local state\n            setOrganizations((orgs)=>orgs.map((org)=>({\n                        ...org,\n                        is_default: org.id === orgId\n                    })));\n            return true;\n        } catch (err) {\n            console.error(\"Error setting default organization:\", err);\n            setError(err.message);\n            return false;\n        }\n    };\n    // Create a new organization\n    const createOrganization = async (orgData)=>{\n        try {\n            const data = await (0,_apiUtils__WEBPACK_IMPORTED_MODULE_3__.apiPost)(\"/api/organizations\", orgData);\n            // Refetch organizations to get the updated list\n            await fetchUserOrganizations();\n            return data;\n        } catch (err) {\n            console.error(\"Error creating organization:\", err);\n            setError(err.message);\n            throw err;\n        }\n    };\n    // Get organization members\n    const getOrganizationMembers = async (orgId)=>{\n        try {\n            const data = await (0,_apiUtils__WEBPACK_IMPORTED_MODULE_3__.apiGet)(\"/api/organizations/\".concat(orgId, \"/members\"));\n            return data.members || [];\n        } catch (err) {\n            console.error(\"Error fetching organization members:\", err);\n            // For development, return mock data\n            if (true) {\n                return [\n                    {\n                        id: \"member1\",\n                        organization_id: orgId,\n                        user_id: \"user1\",\n                        name: \"Dr. John Doe\",\n                        email: \"john.doe@example.com\",\n                        role: \"owner\",\n                        created_at: \"2025-01-15T10:00:00Z\",\n                        updated_at: \"2025-01-15T10:00:00Z\",\n                        is_default: true\n                    },\n                    {\n                        id: \"member2\",\n                        organization_id: orgId,\n                        user_id: \"user2\",\n                        name: \"Dr. Jane Smith\",\n                        email: \"jane.smith@example.com\",\n                        role: \"admin\",\n                        created_at: \"2025-01-16T14:30:00Z\",\n                        updated_at: \"2025-01-16T14:30:00Z\",\n                        is_default: false\n                    },\n                    {\n                        id: \"member3\",\n                        organization_id: orgId,\n                        user_id: \"user3\",\n                        name: \"Robert Johnson\",\n                        email: \"robert.johnson@example.com\",\n                        role: \"member\",\n                        created_at: \"2025-01-17T09:45:00Z\",\n                        updated_at: \"2025-01-17T09:45:00Z\",\n                        is_default: false\n                    }\n                ];\n            }\n            setError(err.message);\n            throw err;\n        }\n    };\n    // Invite a new member to the organization\n    const inviteMember = async function(orgId, email) {\n        let role = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : \"member\";\n        try {\n            return await (0,_apiUtils__WEBPACK_IMPORTED_MODULE_3__.apiPost)(\"/api/organizations/\".concat(orgId, \"/invitations\"), {\n                email,\n                role\n            });\n        } catch (err) {\n            console.error(\"Error inviting member:\", err);\n            setError(err.message);\n            throw err;\n        }\n    };\n    // Get API headers with organization context\n    const getApiHeaders = ()=>{\n        const headers = {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": \"Bearer \".concat(localStorage.getItem(\"supabase.auth.token\"))\n        };\n        if (currentOrganization) {\n            headers[\"X-Organization-ID\"] = currentOrganization.id;\n        }\n        return headers;\n    };\n    // Prepare context value\n    const contextValue = {\n        organizations,\n        currentOrganization,\n        loading,\n        error,\n        switchOrganization,\n        createOrganization,\n        getOrganizationMembers,\n        inviteMember,\n        getApiHeaders,\n        refreshOrganizations: fetchUserOrganizations\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(OrganizationContext.Provider, {\n        value: contextValue,\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/luzuko/Project_2025/sdk_next_react_version/frontend/src/utils/organizationContext.js\",\n        lineNumber: 234,\n        columnNumber: 5\n    }, this);\n}\n_s(OrganizationProvider, \"y4dj1YXKV1BsJfIbJPuQCZGdQlk=\", false, function() {\n    return [\n        _hooks_useAuth__WEBPACK_IMPORTED_MODULE_2__.useAuth\n    ];\n});\n_c = OrganizationProvider;\n/**\n * Hook to use the organization context\n */ function useOrganization() {\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(OrganizationContext);\n    if (!context) {\n        throw new Error(\"useOrganization must be used within an OrganizationProvider\");\n    }\n    return context;\n}\n_s1(useOrganization, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n/**\n * Higher-order component to add organization context to a component\n */ function withOrganization(Component) {\n    return function WithOrganizationComponent(props) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(OrganizationContext.Consumer, {\n            children: (context)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n                    ...props,\n                    organization: context\n                }, void 0, false, {\n                    fileName: \"/Users/luzuko/Project_2025/sdk_next_react_version/frontend/src/utils/organizationContext.js\",\n                    lineNumber: 258,\n                    columnNumber: 23\n                }, this)\n        }, void 0, false, {\n            fileName: \"/Users/luzuko/Project_2025/sdk_next_react_version/frontend/src/utils/organizationContext.js\",\n            lineNumber: 257,\n            columnNumber: 7\n        }, this);\n    };\n}\n/**\n * Hook to handle API requests with organization context\n */ function useOrganizationApi() {\n    _s2();\n    const { getApiHeaders, currentOrganization } = useOrganization();\n    // Make an API request with organization context\n    const apiRequest = async function(url) {\n        let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        // Get headers with organization context\n        const headers = getApiHeaders();\n        // Merge with provided options\n        const mergedOptions = {\n            ...options,\n            headers: {\n                ...headers,\n                ...options.headers || {}\n            }\n        };\n        // Make the request\n        const response = await fetch(url, mergedOptions);\n        // Handle response\n        if (!response.ok) {\n            const errorText = await response.text();\n            throw new Error(errorText || response.statusText);\n        }\n        return response.json();\n    };\n    return {\n        apiRequest,\n        orgId: currentOrganization === null || currentOrganization === void 0 ? void 0 : currentOrganization.id\n    };\n}\n_s2(useOrganizationApi, \"szhSqSAn8RZilhNWoK1wkMFSaqY=\", false, function() {\n    return [\n        useOrganization\n    ];\n});\nvar _c;\n$RefreshReg$(_c, \"OrganizationProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/utils/organizationContext.js\n"));

/***/ })

});