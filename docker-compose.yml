version: '3.8'

services:
  # PostgreSQL database with RLS enabled
  postgres:
    image: postgres:15-alpine
    container_name: sdk-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: sdk_next
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis for job queues and caching
  redis:
    image: redis:7-alpine
    container_name: sdk-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  # MinIO for object storage (S3-compatible)
  minio:
    image: minio/minio:latest
    container_name: sdk-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Create default MinIO buckets
  minio-setup:
    image: minio/mc:latest
    container_name: sdk-minio-setup
    depends_on:
      minio:
        condition: service_started
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc config host add minio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb minio/documents;
      /usr/bin/mc anonymous set download minio/documents;
      exit 0;
      "

  # Python worker service for document processing with LandingAI
  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile
    container_name: sdk-worker
    ports:
      - "8000:8000"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - S3_ENDPOINT=http://minio:9000
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin
      - S3_BUCKET_NAME=documents
      - API_CALLBACK_URL=http://host.docker.internal:3001/api/documents/process-result
      - LANDINGAI_API_KEY=${LANDINGAI_API_KEY:-}
      - LANDINGAI_CLIENT_ID=${LANDINGAI_CLIENT_ID:-}
    volumes:
      - ./worker:/app
    depends_on:
      - redis
      - minio
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

volumes:
  postgres_data:
  redis_data:
  minio_data: